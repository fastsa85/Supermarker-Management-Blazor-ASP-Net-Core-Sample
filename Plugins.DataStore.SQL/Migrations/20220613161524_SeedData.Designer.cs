// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Plugins.DataStore.SQL;

#nullable disable

namespace Plugins.DataStore.SQL.Migrations
{
    [DbContext(typeof(MarketContext))]
    [Migration("20220613161524_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CoreBusiness.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Description = "Beverage",
                            Name = "Beverage"
                        },
                        new
                        {
                            CategoryId = 2,
                            Description = "Bakery",
                            Name = "Bakery"
                        },
                        new
                        {
                            CategoryId = 3,
                            Description = "Meat",
                            Name = "Meat"
                        });
                });

            modelBuilder.Entity("CoreBusiness.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<int?>("CategoryId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Quantity")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            Name = "Iced Tea",
                            Price = 1.99m,
                            Quantity = 100
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 1,
                            Name = "Ginger Ale",
                            Price = 0.99m,
                            Quantity = 99
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 2,
                            Name = "Whole Wheat Bread",
                            Price = 1.19m,
                            Quantity = 199
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 2,
                            Name = "White Bread",
                            Price = 1.50m,
                            Quantity = 88
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 2,
                            Name = "Donut",
                            Price = 0.55m,
                            Quantity = 51
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 3,
                            Name = "Pork",
                            Price = 5.01m,
                            Quantity = 24
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 3,
                            Name = "Beef",
                            Price = 4.69m,
                            Quantity = 19
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryId = 3,
                            Name = "Chicken",
                            Price = 3.99m,
                            Quantity = 12
                        });
                });

            modelBuilder.Entity("CoreBusiness.Models.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionId"), 1L, 1);

                    b.Property<int>("BeforeQuantity")
                        .HasColumnType("int");

                    b.Property<string>("CashierName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoldQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("TransactionId");

                    b.ToTable("Transaction");

                    b.HasData(
                        new
                        {
                            TransactionId = 1,
                            BeforeQuantity = 110,
                            CashierName = "Alex",
                            Price = 1.98m,
                            ProductId = 1,
                            ProductName = "Iced Tea",
                            SoldQuantity = 10,
                            Timestamp = new DateTime(2022, 6, 13, 19, 15, 24, 379, DateTimeKind.Local).AddTicks(7949)
                        });
                });

            modelBuilder.Entity("CoreBusiness.Models.Product", b =>
                {
                    b.HasOne("CoreBusiness.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CoreBusiness.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
