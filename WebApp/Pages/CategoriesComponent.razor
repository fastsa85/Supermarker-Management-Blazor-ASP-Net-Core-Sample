@page "/categories"
@attribute [Authorize(Policy = "AdminOnly")]

@inject NavigationManager NavigationManager
@inject IViewCategoriesUseCase ViewCategoriesUseCase
@inject IDeleteCategoryUseCase DeleteCategoryUseCase

<h3>Manage Categories</h3>

@if (categories != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Description</th>
                <th></th>
            </tr>            
        </thead>
        <tbody>
            @foreach(var category in categories)
            {
                <tr>
                    <td>@category.Name</td>
                    <td>@category.Description</td>
                    <td>
                        <button type="button" class="btn btn-link" @onclick="() => OnClickEditCategory(category)">Edit</button>
                        <button type="button" class="btn btn-link" @onclick="() => OnClickDeleteCategory(category)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
<br/>
<button type="button" @onclick="OnClickAddCategory" class="btn btn-primary">Add Category</button>


@code {
    private List<Category> categories;

    private void OnClickAddCategory()
    {
        NavigationManager.NavigateTo("/addcategory");
    }

    private void OnClickEditCategory(Category category)
    {
        NavigationManager.NavigateTo($"/editcategory/{category.CategoryId}");  
    }

    private void OnClickDeleteCategory(Category category)
    {
        DeleteCategoryUseCase.Execute(category.CategoryId);
        LoadCategories();
    }

    private void LoadCategories()
    {
        categories = ViewCategoriesUseCase.Execute().ToList();
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        LoadCategories();
    }
}
