@page "/cashier_console"
@attribute [Authorize(Policy = "CashierOnly")]

@if (!string.IsNullOrWhiteSpace(cashierName))
{
     <div class="row">
        <div class="col-7">
            <h3>Cashier's Console</h3>
        </div>
        <div class="col-1">
            <label for="cashier">Cashier Name</label>
        </div>
        <div class="col-2">
            <div class="form-group">            
                <input type="text" id="cashier" class="form-control" @bind-value="cashierName"/>
            </div>
        </div>
    </div>

    <br />

    <div class="row">
        <div class="col-4">            
            <SelectProductForSellingComponent OnPoductSelected="SelectProduct"></SelectProductForSellingComponent>
            <SellProductComponent CashierName=@cashierName SelectedProduct="selectedProduct" OnProductSold="SellProduct"></SellProductComponent>
        </div>
        <div class="col">
           <TodayTransactionsComponent @ref="todayTransactionsComponent"></TodayTransactionsComponent>
        </div>
    </div>
}

@code {
    private TodayTransactionsComponent todayTransactionsComponent;
    private Product selectedProduct;
    private string cashierName;

    [CascadingParameter]
    private Task<AuthenticationState> _authState { get; set; }
    private AuthenticationState authState;

    protected override async Task OnInitializedAsync()
    {
        authState = await _authState;
        cashierName = authState.User.Identity.Name;        
    }

    private void SelectProduct(Product product)
    {
        selectedProduct = product;
    }

    private void SellProduct()
    {
        todayTransactionsComponent.LoadTransactions(cashierName);
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);

        if (firstRender)
        {
            todayTransactionsComponent.LoadTransactions(cashierName);
        }
    }
}